<lnk:TopmostUnCloseableWindow Width="500" Height="500" Left="1000" Top="0" x:Class="AlexPi.Scr.Vws.ContainerJ" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
                              Title="J - 10" 
                              xmlns:lnk="clr-namespace:AlexPi.Scr.Unclosables" 
                              Style="{StaticResource MouseEnterableSlowShowWindow}">
  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="0" ResizeBorderThickness="10" />
  </WindowChrome.WindowChrome>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Rectangle Grid.Row="0" Fill="#FF006DB6"   />
    <Rectangle Grid.Row="1" Fill="#FFDCBF01" />
    <Viewbox   Grid.RowSpan="2" Stretch="Fill" Margin="5">
      <Image Source="/Images/UkraineFlag/ukraine-realistic-wavy-flag-free-vector (0).webp" />
      <!--
      <Image Source="/Images/UkraineFlag/ukraine-flag-animated.gif" />
      WPF does not natively support animated GIFs. However, there are several ways to display an animated GIF in a WPF application. One solution is to use a third-party library such as WpfAnimatedGif1. You can install it with NuGet and use it by adding a new namespace to the Window where you want to add the GIF image1. Another solution is to create a custom control that handles the animation of the GIF
      -->
    </Viewbox>

    <Button Style="{StaticResource aav_cancel_button}" Click="onClose" />
  </Grid>
</lnk:TopmostUnCloseableWindow>
