<UserControl x:Class="AlexPi.Scr.UsrCtrls.GaugeArrowOne" x:Name="nm" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:ec="http://schemas.microsoft.com/expression/2010/controls" mc:Ignorable="d" 
             >
    <UserControl.Resources>
        <FontFamily x:Key="FontFamily_TimesNewRoman">Times New Roman</FontFamily>

        <Storyboard Timeline.DesiredFrameRate="3" x:Key="StoryboardOu">
            <DoubleAnimationUsingKeyFrames BeginTime="0:1:1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="pathOu" RepeatBehavior="10x" AutoReverse="False">
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="54" >
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="54"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="90">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:9" Value="90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="126">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="126"/>
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="-130">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:17" Value="-130"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard Timeline.DesiredFrameRate="3" x:Key="StoryboardIn">
            <DoubleAnimationUsingKeyFrames BeginTime="0:1:1.75" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="pathIn" RepeatBehavior="10x" AutoReverse="False">
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="54" >
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="54"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="90">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:9" Value="90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="126">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="126"/>
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="-130">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:17" Value="-130"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard Timeline.DesiredFrameRate="3" x:Key="Storyboard01">
            <DoubleAnimationUsingKeyFrames BeginTime="0:1:2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="path" RepeatBehavior="10x" AutoReverse="False">
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="54" >
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="3" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="54"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="90">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="3" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:9" Value="90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="126">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="3" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="126"/>
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="-130">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:17" Value="-130"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <!--<UserControl.Triggers>
    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
      <BeginStoryboard Storyboard="{StaticResource StoryboardOu}" />
			<BeginStoryboard Storyboard="{StaticResource StoryboardIn}" />
			<BeginStoryboard Storyboard="{StaticResource Storyboard01}" />
    </EventTrigger>
  </UserControl.Triggers>-->
    <Viewbox x:Name="LayoutRoot"  >
        <Grid Width="550" Height="550">

            <!--<Image Source="/AlexPi.Scr;component/Images/GpsSpeedometer02.png" Opacity="0.7" Margin="-219,-263,-220,-177" />

            <ed:Arc StartAngle="126" EndAngle="210" ArcThickness="0.4" ArcThicknessUnit="Percent" Margin="9" Stretch="None" 
						Stroke="#555" StrokeThickness="0.75" Visibility="Hidden" d:IsHidden="True">
                <ed:Arc.Fill>
                    <RadialGradientBrush Center="190,190" GradientOrigin="190,190" MappingMode="Absolute" RadiusY="187.5" RadiusX="187.5" >
                        <GradientStop Color="#FF0000EB" Offset="1"/>
                        <GradientStop Color="#FF0000ED" Offset="0.642"/>
                        <GradientStop Color="#FF9999FF" Offset="0.848" />
                        <GradientStop Color="#FF2A2AEF" Offset="0.946" />
                        <GradientStop Color="#FF0000ED" Offset="0.679" />
                    </RadialGradientBrush>
                </ed:Arc.Fill>
            </ed:Arc>

            <ed:Arc StartAngle="-130.45" EndAngle="133" StrokeDashArray=".1 1.659"   Stretch="None" Stroke="#04B7E6" Margin="35" StrokeThickness="38" />
            <ed:Arc StartAngle="-130.35" EndAngle="133" StrokeDashArray=".15 1.383"  Stretch="None" Stroke="#04B7E6" Margin="41" StrokeThickness="22" />
            <ed:Arc StartAngle="-130.3" EndAngle="133" StrokeDashArray=".18 1.041"  Stretch="None" Stroke="#04B7E6" Margin="42" StrokeThickness="14" />

            <TextBlock Text="   Planned" x:Name="tbTitleIn" Visibility="Hidden" />
            <TextBlock Text="   Actual " x:Name="tbTitleOu" Visibility="Hidden" />
            <ed:Arc x:Name="arcO" ArcThicknessUnit="Pixel" EndAngle="210" Stretch="None" StrokeThickness="0" StartAngle="{Binding ElementName=nm, Path=OuterVal, FallbackValue=-130}" Width="485" Height="485"/>
            <ed:Arc x:Name="arcI" ArcThicknessUnit="Pixel" EndAngle="210" Stretch="None" StrokeThickness="0" StartAngle="{Binding ElementName=nm, Path=InnerVal, FallbackValue=-130}" Width="390" Height="390"/>
            
            <ec:PathListBox ItemsSource="{Binding Text, ElementName=tbTitleOu}" >
                <ec:PathListBox.LayoutPaths>
                    <ec:LayoutPath SourceElement="{Binding ElementName=arcO}" Orientation="OrientToPath" FillBehavior="NoOverlap" Padding="-8"/>
                </ec:PathListBox.LayoutPaths>
            </ec:PathListBox>
            <ec:PathListBox ItemsSource="{Binding Text, ElementName=tbTitleIn}" >
                <ec:PathListBox.LayoutPaths>
                    <ec:LayoutPath SourceElement="{Binding ElementName=arcI}" Orientation="OrientToPath" Padding="-8" />
                </ec:PathListBox.LayoutPaths>
            </ec:PathListBox>

            <Ellipse Height="44" Width="44" Canvas.Top="324" d:IsHidden="False">
                <Ellipse.Fill>
                    <RadialGradientBrush>
                        <GradientStop Color="#888" Offset="1"/>
                        <GradientStop Color="#aaa" Offset=".92"/>
                        <GradientStop Color="#888"/>
                    </RadialGradientBrush>
                </Ellipse.Fill>
            </Ellipse>

            <Viewbox Width="490" Height="490"   >
                <Grid Width="400" Height="400"  >
                    <Path x:Name="pathOu"  Data="M200,76 L190,63 C190,63 190,58 190,58 199.96704,57 200,57 210,58 210,58 210,63 210,63 z" Height="14" Width="14" Stretch="Fill" VerticalAlignment="Top" 
                          RenderTransformOrigin="0.5,14.3">
                        <Path.Effect>
                            <DropShadowEffect/>
                        </Path.Effect>
                        <Path.RenderTransform>
                            <RotateTransform Angle="{Binding ElementName=nm, Path=OuterVal, FallbackValue=-95.5}" />
                        </Path.RenderTransform>
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                <GradientStop Color="#bb0" Offset="0.501"/>
                                <GradientStop Color="#ee0" Offset="0.499"/>
                            </LinearGradientBrush>
                        </Path.Fill>
                    </Path>

                    <Path x:Name="pathIn"  Data="M200,38 L190,53 C190,53 190,58 190,58 200,57 200,57 210,58 210,58 210,53 210,53 z" Height="14" Width="14" Stretch="Fill" VerticalAlignment="Top" 
                          RenderTransformOrigin="0.5,12.1" Margin="30">
                        <Path.Effect>
                            <DropShadowEffect/>
                        </Path.Effect>
                        <Path.RenderTransform>
                            <RotateTransform Angle="{Binding ElementName=nm, Path=InnerVal, FallbackValue=-95.5}" />
                        </Path.RenderTransform>
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                <GradientStop Color="#0b0" Offset="0.501"/>
                                <GradientStop Color="#4e4" Offset="0.500"/>
                            </LinearGradientBrush>
                        </Path.Fill>
                    </Path>
                </Grid>
            </Viewbox>
            -->

            <Grid Width="400" Height="400" >
                <Path x:Name="path" Data="M200,-25 L180,200 L186,254 L214,254 L220,200 z" Stroke="#65D2FF" StrokeThickness="5" UseLayoutRounding="True" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5" d:IsHidden="False" >
                    <Path.Fill>
                        <RadialGradientBrush         Center="0.5,0.7" RadiusY=".4" RadiusX=".2" 
                                             GradientOrigin="0.5,0.7">
                            <GradientStop Color="#fFF" Offset="0"/>
                            <GradientStop Color="#65D2FF" Offset="1"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                    <Path.RenderTransform>
                        <!--<CompositeTransform Rotation="30"/>-->
                        <RotateTransform Angle="{Binding ElementName=nm, Path=MiddlVal, FallbackValue='-150'}" />
                    </Path.RenderTransform>
                </Path>
                <Ellipse Width="60" Height="60" StrokeThickness="4" Stroke="#65D2FF" Fill="#111" />
                <Ellipse Width="35" Height="25" Margin="0,176,0,0" VerticalAlignment="Top" >
                    <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#111" Offset=".95"/>
                            <GradientStop Color="#FF4E9EBF"/>
                        </LinearGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>

            <TextBlock Text="{Binding ElementName=nm, Path=GaugeText, FallbackValue='22.8'}"            VerticalAlignment="Bottom" HorizontalAlignment="Center" TextAlignment="Center" FontSize="33" Foreground="#04B7E6" Margin="0,0,0,90" />
            <TextBlock Text="{Binding ElementName=nm, Path=GaugeName, FallbackValue='Explorer (Mb)'}"   VerticalAlignment="Bottom" HorizontalAlignment="Center" TextAlignment="Center" FontSize="33" Foreground="#04B7E6" Margin="0 0 0 20" FontWeight="SemiBold" d:LayoutOverrides="Width" />

        </Grid>
    </Viewbox>
</UserControl>