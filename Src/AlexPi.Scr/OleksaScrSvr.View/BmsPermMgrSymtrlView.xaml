<UserControl x:Class="OleksaScrSvr.View.BmsPermMgrSymtrlView" x:Name="wnd" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:stb="clr-namespace:WpfUserControlLib.Helpers;assembly=WpfUserControlLib" 
             xmlns:cnv="clr-namespace:WpfUserControlLib.Converters;assembly=WpfUserControlLib" 
             xmlns:vms="clr-namespace:OleksaScrSvr.VM.VMs;assembly=OleksaScrSvr.VM" d:DataContext="{d:DesignInstance Type=vms:BmsPermMgrSymtrlVM}" 
             d:DesignHeight="200" d:DesignWidth="800" Padding="0" Loaded="OnLoaded" d:Background="#333">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/BasicDefaultsLayout.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/DataGrid.Base.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/ComboBox.Base.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/DataGrid.Anime.xaml" />
        <!--
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/ComboBoxStyle_IsEditable.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/ColorScheme/Theme.Color.Dark.Gray.xaml" />-->
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource TbkVCenteredInfoClr}" />

      <Style TargetType="ToggleButton">
        <Setter Property="VerticalAlignment"          Value="Center"  />
        <Setter Property="HorizontalAlignment"        Value="Center"  />
        <Setter Property="BorderThickness"            Value="0"  />
        <Setter Property="Height"                     Value="20"  />
        <Setter Property="Margin"                     Value="0"  />
        <Setter Property="Padding"                    Value="-22"  />
        <Setter Property="Background"                 Value="#aaa"  />
        <Style.Resources>
          <Style TargetType="Border">
            <Setter Property="CornerRadius"     Value="8" />
          </Style>
        </Style.Resources>
      </Style>

      <CollectionViewSource x:Key="_EnvtViewSource"/>
      <CollectionViewSource x:Key="_RoleViewSource"/>
      <CollectionViewSource x:Key="_userViewSource"/>

      <sys:Double x:Key="blur">0</sys:Double>

      <CollectionViewSource x:Key="_accountRequestViewSource"/>

      <Style x:Key="RightAlignStyle"   TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right"	/>
      </Style>
      <Style x:Key="CenterAlignStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
      </Style>
      <Style x:Key="CenterAlignChkBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Style>

      <SineEase    x:Key="si"     EasingMode="EaseIn" />
      <SineEase    x:Key="so"     EasingMode="EaseOut" />
      <SineEase    x:Key="sb"     EasingMode="EaseInOut" />
      <CubicEase   x:Key="co"     EasingMode="EaseOut" />
      <CubicEase   x:Key="ci"     EasingMode="EaseIn" />
      <CubicEase   x:Key="cb"     EasingMode="EaseInOut" />
      <QuarticEase x:Key="qo"     EasingMode="EaseOut" />
      <QuarticEase x:Key="qi"     EasingMode="EaseIn" />
      <QuarticEase x:Key="qb"     EasingMode="EaseInOut" />
      <BackEase    x:Key="ko"     EasingMode="EaseOut" />
      <BackEase    x:Key="ki"     EasingMode="EaseIn" />
      <BackEase    x:Key="kb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="ei"     EasingMode="EaseIn" />
      <ElasticEase x:Key="eo"     EasingMode="EaseOut" />
      <ElasticEase x:Key="eb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="eo0s5"  EasingMode="EaseOut" Oscillations="0" Springiness="5" />
      <ElasticEase x:Key="eo2s5"  EasingMode="EaseOut" Oscillations="2" Springiness="5" />
      <BounceEase  x:Key="bo"     EasingMode="EaseOut" />
      <Color x:Key="c">#1f00</Color>
      <Color x:Key="a">#3f00</Color>
      <Color x:Key="b">#1f00</Color>
      <Color x:Key="e">#10f0</Color>
      <Color x:Key="f">#00f0</Color>
      <LinearGradientBrush x:Key="rf1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop1a" Color="{StaticResource c}" Offset="0.0" />
        <GradientStop x:Name="GradientStop2a" Color="{StaticResource a}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3"  Color="{StaticResource b}" Offset="1.0" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="rf2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop3a" Color="{StaticResource f}" Offset="0.0" />
        <GradientStop x:Name="GradientStop3e" Color="{StaticResource e}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3d" Color="{StaticResource f}" Offset="1.0" />
      </LinearGradientBrush>

      <Storyboard x:Key="CompositeFlashing"   Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Red" To="Yellow" EasingFunction="{StaticResource eo}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource eo}"/>
      </Storyboard>
      <Storyboard x:Key="ColorFlashing"       Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Orange" To="Yellow" EasingFunction="{StaticResource so}"/>
      </Storyboard>
      <Storyboard x:Key="OpacityFlashing"     Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource sb}"/>
      </Storyboard>
      <Storyboard x:Key="CompositeRestored"   Duration="0:0:1" FillBehavior="Stop" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>
      <Storyboard x:Key="ColorRestored"       Duration="0:0:1" FillBehavior="Stop">
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
      </Storyboard>
      <Storyboard x:Key="OpacityRestored"     Duration="0:0:1" FillBehavior="Stop">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>

      <Style x:Key="AnimOpacityDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="AnimOpacityDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="awesomeStyleRadlDiag" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrRadl}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardRadl}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridCellStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrDiag}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardDiag}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridRowStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrVert}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardVert}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="DataGridRow">
        <Setter Property="DetailsVisibility" Value="Collapsed"/>
        <!--<Setter Property="Background" Value="Lavender"/>-->
        <Style.Triggers>
          <DataTrigger Binding="{Binding Granted}" Value="True">
            <Setter Property="ToolTip" Value="Roles granted. Click check-mark to revoke."/>
            <Setter Property="Background" Value="#30f0"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Selectd}" Value="True">
            <Setter Property="ToolTip" Value="Adjust permissions by clicking V/X in the Granted column"/>
            <Setter Property="Background" Value="#04e"/>
            <Setter Property="Foreground" Value="Yellow"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Granted}" Value="False">
            <Setter Property="ToolTip" Value="No permissions granted. Click  X-mark  to grant."/>
            <!--<Setter Property="Background" Value="Transparent"/>-->
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <DataTemplate x:Key="GrantCellTemplate">
        <Grid >
          <!--
        <Grid          Background="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                          Content="{Binding Granted, UpdateSourceTrigger=PropertyChanged}"
          -->
          <ToggleButton IsChecked="{Binding Granted, UpdateSourceTrigger=PropertyChanged}" Click="OnToggleGrant" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock       Text="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToCharConverter}}" FontFamily="Wingdings" FontSize="26"
                       Foreground="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter ColorTrue=#0d6}}" />
          </ToggleButton>
        </Grid>
      </DataTemplate>

    </ResourceDictionary>
  </UserControl.Resources>
  <Grid x:Name="ZommablePanel" Tag="//tu: Grid with round corners!!! => must be a Style.">
    <Grid.Resources>
      <Style TargetType="{x:Type Border}">
        <Setter Property="CornerRadius"     Value="4"/>
        <Setter Property="Padding"          Value="5"/>
        <Setter Property="Background"       Value="{StaticResource BackBackgroundBrush}" />
        <Setter Property="Opacity"          Value=".9002" />
      </Style>
    </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="2"/>
      <RowDefinition Height="0"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Grid Grid.Row="3" Grid.RowSpan="2" Margin="8" Opacity=".38">
      <Border>
        <Border.Effect>
          <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
        </Border.Effect>
      </Border>
      <Border>
        <Border.Effect>
          <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
        </Border.Effect>
      </Border>
    </Grid>

    <Rectangle Grid.Row="3" Margin="8 8 8 0" >
      <Rectangle.Fill>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#1888" Offset="0"/>
          <GradientStop Color="#2111" Offset="1"/>
        </LinearGradientBrush>
      </Rectangle.Fill>
    </Rectangle>
    <Grid Grid.Row="6" Grid.RowSpan="1" Margin="8">
      <Border>
        <Border.Effect>
          <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
        </Border.Effect>
      </Border>
      <Border>
        <Border.Effect>
          <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
        </Border.Effect>
      </Border>
    </Grid>

    <Grid Grid.Row="3" Margin="18 8 8 4" x:Name="spc1" HorizontalAlignment="Stretch" Visibility="Visible">
      <Grid.Effect>
        <BlurEffect Radius="{Binding IsBusy, Converter={cnv:UniConverter InvertValue=False}}" d:Radius="0" />
      </Grid.Effect>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Label     Grid.Column="0" Content="E_nvironment " Target="{Binding ElementName=cbxApps}" FontSize="14" />
      <ComboBox  Grid.Column="1" FontSize="18" Height="30" x:Name="cbxApps" Margin="14 8" ItemsSource="{Binding EnvtViewSource}" SelectedValue="{Binding PrefAplctnId}" 
                 SelectedValuePath="EnvId" 
                 SelectedItem="{Binding SelEnvt}" 
                 DisplayMemberPath="EnvName" BorderThickness=".5" />
      <TextBlock Grid.Column="2" Text="{Binding Report}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" d:Text="Hello. Is everything OK?" Visibility="{Binding Report, Converter={cnv:ReportToVisibilityConverter InvertValue=False}}" Foreground="{StaticResource MainForegroundBrush}" TextWrapping="Wrap" />
      <Menu      Grid.Column="3" Margin="8"   ToolTip="More actions on the roles ..." VerticalAlignment="Center" >
        <MenuItem Header=" _More ">
          <MenuItem Header="[Re]_load actual users/roles" FontSize="18" Command="{Binding LoadRealDataCommand}" ToolTip="[Re]fresh users/roles from _roleUsers.xml (~7 sec)" />
          <MenuItem Header="Enrich with data from AD"     FontSize="18" Command="{Binding UpdateADCCommand}"    ToolTip="Add full name and email from AD (~20 sec)" Foreground="#d60" />
          <!--
          <MenuItem Header="_Enrich from AD cache" FontSize="18" Command="{Binding ADEnrichCommand}" ToolTip="Add users from AD cache" />
          <MenuItem Header="_Save model to json" FontSize="18" Command="{Binding Save2DbCommand}" />
          <Separator />
          <MenuItem Header="CLI - List _User Roless"  FontSize="18" Command="{Binding ListUserRolesCommand}" />
          <MenuItem Header="_Save DB CoBe" Click="OnSave"  ToolTip="Save to DB if dirty" />
          <Separator />
          <Grid>
            <Button   Width="120" Margin="8 0" Content="             _Refresh" IsDefault="True" Command="{Binding RefreshFromDbCommand}"/>
          </Grid>-->
        </MenuItem>
      </Menu>

    </Grid>

    <Grid Grid.Row="4" Margin="12 1 12 14">
      <Grid.Effect>
        <BlurEffect Radius="{Binding IsBusy, Converter={cnv:UniConverter InvertValue=False}}" d:Radius="0" />
      </Grid.Effect>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="1"/>
        <ColumnDefinition Width="1*"/>
        <ColumnDefinition Width="10"/>
        <ColumnDefinition Width="2*"/>
        <ColumnDefinition Width="1"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="1"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <DataGrid Grid.Row="3" Grid.Column="1" ItemsSource="{Binding RoleViewSource}" SelectionUnit="Cell" SelectedCellsChanged="DgPerm_SelectedCellsChanged" CanUserAddRows="True" x:Name="dgPerm" >
        <DataGrid.Columns>
          <DataGridTemplateColumn Header=" Role "     Width="*">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <stb:HighlightableTextBlock Text="{Binding RoleName}" SearchText="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchRole}" Foreground="{StaticResource MainForegroundBrush}" HighlightForeground="{StaticResource InfoForegroundBrush}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
            <DataGridTemplateColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" >
                  <Label    Content="Role     Searc_h:" Target="{Binding ElementName=sch}"/>
                  <TextBox  Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchRole, UpdateSourceTrigger=PropertyChanged}" Width="90" x:Name="sch" BorderThickness=".5" />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
          </DataGridTemplateColumn>

          <DataGridTemplateColumn                                       x:Name="colPg" Visibility="Collapsed" >
            <DataGridTemplateColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" Margin="2 0" HorizontalAlignment="Right">
                  <CheckBox Content="O_nly" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.GrantedOnlyRoles}" ToolTip="Show Members Only" />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
          </DataGridTemplateColumn>

          <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource GrantCellTemplate}" x:Name="colPG" Visibility="Collapsed" />
        </DataGrid.Columns>
      </DataGrid>

      <DataGrid Grid.Row="3" Grid.Column="3" ItemsSource="{Binding UserViewSource}" SelectionUnit="Cell" SelectedCellsChanged="DgUser_SelectedCellsChanged" CanUserAddRows="True" x:Name="dgUser" >
        <DataGrid.Columns>
          <!--
          <DataGridTextColumn     Header="User" Binding="{Binding UserName}"      Width="*"/>
          <DataGridTextColumn     Header=" Full Name " Binding="{Binding FullName}" />
          -->
          <DataGridTemplateColumn Header="User">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <stb:HighlightableTextBlock Text="{Binding UserName}" SearchText="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchUser}" Foreground="{StaticResource MainForegroundBrush}" HighlightForeground="{StaticResource InfoForegroundBrush}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>

          <DataGridTemplateColumn Header=" Full Name ">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <stb:HighlightableTextBlock Text="{Binding FullName}" SearchText="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchUser}" Foreground="{StaticResource MainForegroundBrush}" HighlightForeground="{StaticResource InfoForegroundBrush}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>

          <DataGridTextColumn     Header=" Employee Id " Binding="{Binding EmployeeId}" />

          <DataGridTemplateColumn Header=" Email "     Width="*">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <stb:HighlightableTextBlock Text="{Binding EmailAddress}" SearchText="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchUser}" Foreground="{StaticResource MainForegroundBrush}" HighlightForeground="{StaticResource InfoForegroundBrush}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
            <DataGridTemplateColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" >
                  <Label    Content="Email     _Search:" Target="{Binding ElementName=sch}"/>
                  <TextBox  Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchUser, UpdateSourceTrigger=PropertyChanged}" Width="90" x:Name="sch" BorderThickness=".5" />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
          </DataGridTemplateColumn>
          
          <!-- //todo: does not fire!!!
          <DataGridTemplateColumn                                       x:Name="colUG" >
            <DataGridTemplateColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" Margin="4 0" HorizontalAlignment="Right">
                  <CheckBox Content="Granted _Only" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.GrantedOnlyUsers}" ToolTip="Show Members Only"       />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid >
                  <ToggleButton IsChecked="{Binding Granted, UpdateSourceTrigger=PropertyChanged}" Click="OnTogglePermission" HorizontalAlignment="Center" VerticalAlignment="Center"
                                IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.AllowSave}">
                    <TextBlock       Text="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToCharConverter}}" FontFamily="Wingdings" FontSize="26"
                               Foreground="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" />
                  </ToggleButton>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>-->

          <DataGridTemplateColumn                                       x:Name="colUg" Visibility="Collapsed" >
            <DataGridTemplateColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" Margin="2 0" HorizontalAlignment="Right">
                  <CheckBox Content="_Only" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.GrantedOnlyUsers}" ToolTip="Show Members Only" />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
          </DataGridTemplateColumn>

          <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource GrantCellTemplate}" x:Name="colUG" Visibility="Collapsed" />
        </DataGrid.Columns>
      </DataGrid>

      <GridSplitter Grid.Column="2" Grid.RowSpan="2" />

    </Grid>
  </Grid>
</UserControl>
